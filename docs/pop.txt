'pop' is a branch of 'pip' which ignores all constraints giving a *maximum* version number for a dependency.
This is to patch the Python community's habit of needlessly specifying maximum versions, which makes it impossible to maintain a standard environment which includes any Python code, forcing users to build an over-complicated and ultimately unworkable hierarchy of virtual environments.

The fix is simple:

pop/src/pip/_internal/operations/check.py contains thedefinition of the function check_package_set, which constructs and returns the variable conflicting_deps.
check_package_set calls boolean req.specifier.contains(version, prereleases=True) to get a list of allowable version numbers.
Class 'Specifier' is imported in src/pip/_internal/req/constructors.py:
from pip._vendor.packaging.specifiers import Specifier
So we'll go to _vendor.packaging.specifiers and add a method 'allows' to 'Specifier', to replace 'contains'.
'allows'  converts "package_x==2.3.1" to "package_x>=2.3.1", and ignores "package_x<2".
